{"ast":null,"code":"var _jsxFileName = \"/Users/olga/work/front-end/react/timer-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react'; //import {Observable} from 'rxjs';\n//import { debounce } from 'rxjs/dist/cjs/internal/operators/debounce';\n\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [timer, setTimer] = useState(0);\n  const [timerOn, setTimerOn] = useState(false);\n  useEffect(() => {\n    let interval = null;\n\n    if (timerOn) {\n      interval = setInterval(() => {\n        setTimer(prevTimer => prevTimer + 10);\n      }, 10);\n    } else {\n      clearInterval(interval);\n    }\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [timerOn]);\n\n  const debounce = (f, delay) => {\n    let timerId;\n    return arg => {\n      clearInterval(timerId);\n      timerId = setTimeout(f, delay, arg);\n    };\n  }; //const HandleClick = () => {\n  //  setTimerOn(false);\n  //};\n\n\n  const doubleClick = debounce(setTimerOn, 300);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: doubleClick(!timerOn),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [(\"0\" + Math.floor(timer / 3600000) % 24).slice(-2), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [(\"0\" + Math.floor(timer / 60000) % 60).slice(-2), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: (\"0\" + Math.floor(timer / 1000) % 60).slice(-2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setTimerOn(true),\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          setTimerOn(false);\n          setTimer(0);\n        },\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setTimer(0),\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"XHyMknEvCTW8jJo0ezpTXS0B3Kc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/olga/work/front-end/react/timer-react/src/App.js"],"names":["useState","useEffect","App","timer","setTimer","timerOn","setTimerOn","interval","setInterval","prevTimer","clearInterval","debounce","f","delay","timerId","arg","setTimeout","doubleClick","Math","floor","slice"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAoC,OAApC,C,CACA;AACA;;AACA,OAAO,WAAP;;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,QAAQ,GAAG,IAAf;;AAEA,QAAGF,OAAH,EAAY;AACVE,MAAAA,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC3BJ,QAAAA,QAAQ,CAACK,SAAS,IAAIA,SAAS,GAAG,EAA1B,CAAR;AACD,OAFqB,EAEnB,EAFmB,CAAtB;AAGD,KAJD,MAIO;AACLC,MAAAA,aAAa,CAACH,QAAD,CAAb;AACD;;AAED,WAAO,MAAM;AACXG,MAAAA,aAAa,CAACH,QAAD,CAAb;AACD,KAFD;AAGD,GAdQ,EAcN,CAACF,OAAD,CAdM,CAAT;;AAgBE,QAAMM,QAAQ,GAAG,CAACC,CAAD,EAAIC,KAAJ,KAAc;AAC7B,QAAIC,OAAJ;AAEA,WAAQC,GAAD,IAAS;AACdL,MAAAA,aAAa,CAACI,OAAD,CAAb;AACAA,MAAAA,OAAO,GAAGE,UAAU,CAACJ,CAAD,EAAIC,KAAJ,EAAWE,GAAX,CAApB;AACD,KAHD;AAID,GAPD,CApBW,CA6Bb;AACA;AACA;;;AAEA,QAAME,WAAW,GAAGN,QAAQ,CAACL,UAAD,EAAa,GAAb,CAA5B;AAGA,sBACE;AAAA,4BACE;AAAK,MAAA,OAAO,EAAEW,WAAW,CAAC,CAACZ,OAAF,CAAzB;AAAA,8BACE;AAAA,mBAAO,CAAC,MAAOa,IAAI,CAACC,KAAL,CAAWhB,KAAK,GAAG,OAAnB,IAA8B,EAAtC,EAA2CiB,KAA3C,CAAiD,CAAC,CAAlD,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,mBAAO,CAAC,MAAOF,IAAI,CAACC,KAAL,CAAWhB,KAAK,GAAG,KAAnB,IAA4B,EAApC,EAAyCiB,KAAzC,CAA+C,CAAC,CAAhD,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAO,CAAC,MAAOF,IAAI,CAACC,KAAL,CAAWhB,KAAK,GAAG,IAAnB,IAA2B,EAAnC,EAAwCiB,KAAxC,CAA8C,CAAC,CAA/C;AAAP;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,MAAMd,UAAU,CAAC,IAAD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAE,MAAM;AACbA,UAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,UAAAA,QAAQ,CAAC,CAAD,CAAR;AACD,SALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAaE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,MAAMA,QAAQ,CAAC,CAAD,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GA9DQF,G;;KAAAA,G;AAgET,eAAeA,GAAf","sourcesContent":["import {useState, useEffect, } from 'react'\n//import {Observable} from 'rxjs';\n//import { debounce } from 'rxjs/dist/cjs/internal/operators/debounce';\nimport './App.css';\n\n\n\nfunction App() {\n  const [timer, setTimer] = useState(0);\n  const [timerOn, setTimerOn] = useState(false);\n\n  useEffect(() => {\n    let interval = null;\n\n    if(timerOn) {\n      interval = setInterval(() => {\n        setTimer(prevTimer => prevTimer + 10)\n      }, 10)\n    } else {\n      clearInterval(interval);\n    }\n\n    return () => {\n      clearInterval(interval);\n    }\n  }, [timerOn])\n\n    const debounce = (f, delay) => {\n      let timerId;\n\n      return (arg) => {\n        clearInterval(timerId);\n        timerId = setTimeout(f, delay, arg);\n      };\n    };\n\n  //const HandleClick = () => {\n  //  setTimerOn(false);\n  //};\n\n  const doubleClick = debounce(setTimerOn, 300);\n\n\n  return (\n    <div>\n      <div onClick={doubleClick(!timerOn)}>\n        <span>{(\"0\" + (Math.floor(timer / 3600000) % 24)).slice(-2)}:</span>\n        <span>{(\"0\" + (Math.floor(timer / 60000) % 60)).slice(-2)}:</span>\n        <span>{(\"0\" + (Math.floor(timer / 1000) % 60)).slice(-2)}</span>\n      </div>\n      <div className=\"App\">\n        <button type=\"button\" onClick={() => setTimerOn(true)}>\n          Start\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            setTimerOn(false);\n            setTimer(0);\n          }}\n        >\n          Stop\n        </button>\n        <button type=\"button\" onClick={() => setTimer(0)}>\n          Reset\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}